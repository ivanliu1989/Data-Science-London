setwd("/Users/ivan/Work_directory/Data-Science-London")
library(caret)
library(gmm)
##### Pre process #####
x <- read.csv("Data/train.csv", header = F)
test <- read.csv("Data/test.csv", header = F)
y <- read.csv("Data/trainLabels.csv", header= F)
names(y)<- 'result'
x <- cbind(x,y)
str(x)
x$result <- as.factor(x$result)
levels(x$result) <- c('No','Yes')
mean(is.na(x))
index <- createDataPartition(x$result, p = 0.8,list = F)
x_train <- x[index,]
x_test <- x[-index,]
install.packages('GMMBoost')
rep(1:10,0.5)
seq(1:10,0.5)
seq(1,10,0.5)
Grid <- expand.grid(C=seq(1,10,0.5))
fitControl <- trainControl(method="repeatedcv",10,10,classProbs = T)
fit_svmRadialCost <- train(result~V15+V13+V19+V35+V29+V40+V37+V33+V7+V24+V12+V5+V2+V21,
method='svmRadialCost', data=x,
trControl = fitControl, verbose=T, preProcess=c('pca','center','scale'),
tuneGrid=Grid)
Pred <- predict(fit_svmRadialCost, x_train)
confusionMatrix(Pred, x_train$result)
featureSelection <- varImp(fit_svmRadialCost)
plot(featureSelection)
Pred <- predict(fit_svmRadialCost, x_test)
confusionMatrix(Pred, x_test$result) ## acc 0.88 after 1st feature selection
prep <- preProcess(x = x_train, method=c('center','scale'))
head(x)
prep <- preProcess(x[1:40] = x_train, method=c('center','scale'))
prep <- preProcess(x[,1:40] = x_train, method=c('center','scale'))
prep <- preProcess(x = x_train[,1:40], method=c('center','scale'))
head(x)
head(x_train)
x_train_1 <- x_train[,-41]
head(x_train_1)
prep <- preProcess(x = x_train_1, method=c('center','scale'))
head(prep)
x_train_1 <- predict(prep, x_train_1)
head(x_train_1)
Pred <- predict(fit_svmRadialCost, x_train_1)
x_train <- x[index,]
prep <- preProcess(x = x_train[,1:40], method=c('center','scale'))
x_train_1 <- predict(prep, x_train)
x_train_1 <- x_train[,-41]
prep <- preProcess(x = x_train_1, method=c('center','scale'))
x_train_1 <- predict(prep, x_train_1)
x_train_1 <- cbind(x_train_1, x_train[,41])
head(x_train_1)
head(x_train)
Pred <- predict(fit_svmRadialCost, x_train_1)
confusionMatrix(Pred, x_train_1[,41])
rm(list=ls())
setwd("/Users/ivan/Work_directory/Data-Science-London")
library(caret)
x <- as.matrix(read.csv("Data/train.csv", header = F))
x_test <- as.matrix(read.csv("Data/test.csv", header = F))
y <- as.matrix(read.csv("Data/trainLabels.csv", header= F))
head(x)
train <- cbind(x,y)
head(train)
head(train[,41])
names(train[,41])  <- 'result'
head(train[,41])
head(train)
colnames(train[,41])  <- 'result'
train <- cbind(x,y)
?princomp
pca2 <- princomp(train)
pca2
plot(pca2)
library(psych)
install.packages('psych')
library(psych)
pca_fit <- principal(train, nfactors=2, rotate="varimax")
install.packages('GPArotation')
pca_fit <- principal(train, nfactors=2, rotate="varimax")
pca_fit
pca_fit <- principal(train, nfactors=2)
pca_fit <- principal(x, nfactors=2)
pca_fit
pca_fit <- principal(x)
pca_fit
pca_fit <- principal(x,2)
pca_fit
pca_fit
pca_fit <- preProcess(train, method='pca')
pca_fit
train_pca <- predict(pca_fit, train)
train_pca
str(train_pca)
summary(train_pca)
plot(train_pca)
pca_fit <- ir.pca <- prcomp(x,center = TRUE,scale. = TRUE)
pca_fit <- prcomp(x,center = TRUE,scale. = TRUE)
pca_fit
x_log <- log(x)
head(x)
x <- read.csv("Data/train.csv", header = F)
x_test <- read.csv("Data/test.csv", header = F)
y <- read.csv("Data/trainLabels.csv", header= F)
x_log <- log(x)
warnings()
head(x)
mean(is.na(x_log))
head(x_log)
pca_fit <- prcomp(x,center = TRUE,scale. = TRUE)
print(pca_fit)
plot(pca_fit)
summary(pca_fit)
predict(pca_fit, newdata=x_test)
predict(pca_fit, newdata=x)
pca_pred <- predict(pca_fit, newdata=x)
head(pca_pred)
pca_fit <- preProcess(x, method=c("BoxCox", "center", "scale", "pca"))
PC = predict(pca_fit, x)
head(PC,3)
PC
trans$rotation
PC$rotation
pca_fit$rotation
head(pca_fit$rotation,3)
head(PC,3)
summary(pca_fit)
summary(PC)
head(pca_fit$rotation,3)
plot(PC)
plot(pca_fit)
plot(x_pca, type = "l")
x_pca <- prcomp(x,center = TRUE,scale. = TRUE)
plot(x_pca, type = "l")
x_pca <- prcomp(x,center = TRUE,scale. = TRUE)
print(x_pca)
plot(x_pca, type = "l")
summary(x_pca)
print(x_pca)
plot(x_pca, type = "l")
pca_fit
head(pca_fit$rotation,3)
head(PC,3)
head(pca_fit,3)
head(pca_fit$rotation,3)
summary(x_pca)
print(x_pca)
plot(x_pca, type = "l")
varImp(pca_fit)
varImp(PC)
plot(x[,1])
plot(density(x[,1]))
plot(density(x[,2]))
plot(density(x[,40]))
plot(density(x[,37]))
qqplot(x[,40])
qqplot(y=x[,40])
qqplot(y,x[,40])
qqplot(y,x[,1])
qqnorm(x[,1])
qqnorm(x[,40])
plot(x[,1],main = NULL, xlab = NULL, ylab = "Density", type = "l",zero.line = TRUE)
plot(x[,1], ylab = "Density", type = "l",zero.line = TRUE)
library(gmm)
?gmm
library(GMMBoost)
?GMMBoost
pca_comp <- 12
gmm_comp <- 4
covariance_type='full'
min_covar <- 0.1
gamma <- 0
c <- 1.0
training <- x[,1:pca_comp]
?gmm
> ?GMMBoost
?GMMBoost
